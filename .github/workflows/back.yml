name: Back-end CI/CD with Tests, SonarCloud & Docker

on:
  push:
    branches:
      - develop
    paths: 
      - 'back/**'
      - '.github/workflows/**'

  pull_request:
    branches:
      - main
    paths: 
      - 'back/**'
      - '.github/workflows/**'

jobs:
  # 1. Validates tests on a pull request
  backend-testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Run Tests & Coverage Report
        working-directory: back
        run: |
          mvn test jacoco:report

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: back/target/site/jacoco/

  # 2. Code quality verification with SonarCloud and Docker build
  sonarcloud-analysis:
    needs: backend-testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          # Ajouter le fichier de configuration de SonarCloud
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
            -Dsonar.java.binaries=back/target/classes
            -Dsonar.java.libraries=back/target/*.jar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # 4. Docker build and push
  docker-build-and-push:
    needs: sonarcloud-analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t bobapp-back ./back
          docker tag bobapp-back ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-back:latest
