name: Front-end CI/CD with coverage report, SonarCloud analysis & Docker image

on:
  push:
    paths:
      - 'front/**'
      - '.github/workflows/**'
    branches:
      - main
  pull_request:
    paths:
      - 'front/**'
      - '.github/workflows/**'
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened

jobs:
  frontend-run-tests-for-protection-rule:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies & Run Coverage
        run: npm ci && npm run test -- --no-watch --no-progress --browsers=ChromeHeadless
        working-directory: front

  frontend-testing-and-sonarcloud-analysis:
    runs-on: ubuntu-latest
    needs: frontend-run-tests-for-protection-rule
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies & Run Coverage
        run: npm ci && npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        working-directory: front

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: front/coverage/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}

  docker-build-and-push:
    needs: frontend-testing-and-sonarcloud-analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t bobapp-front ./front
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
